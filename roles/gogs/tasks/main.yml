---
- name: Install git and unzip
  apt:
    pkg:
      - git
      - unzip

- name: Create user for Gogs.
  user:
    name: "{{ gogs_user }}"
    comment: Gogs
    home: "{{ gogs_user_home }}"

- name: Check if Gogs is already installed.
  stat: path=/usr/local/bin/gogs
  register: gogs_bin

- name: Download Gogs.
  get_url:
    url: "{{ gogs_binary_url }}"
    dest: "{{ gogs_user_home }}/gogs.zip"
    owner: "{{ gogs_user }}"
    group: "{{ gogs_user }}"
  when: gogs_bin.stat.islnk is not defined

- name: Expand Gogs.
  unarchive:
    src: "{{ gogs_user_home }}/gogs.zip"
    dest: "{{ gogs_user_home }}"
    group: "{{ gogs_user }}"
    owner: "{{ gogs_user }}"
    copy: false
    mode: 0755
  when: gogs_bin.stat.islnk is not defined

- name: Make Gogs init script executable.
  file:
    path: "{{ gogs_user_home }}/{{ gogs_init_script_path }}"
    mode: 0755

- name: Symlink Gogs binary and startup scripts.
  file: # noqa 208
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    state: link
  with_items:
    - src: "{{ gogs_user_home }}/gogs/gogs"
      dest: "/usr/local/bin/gogs"
    - src: "{{ gogs_user_home }}/{{ gogs_init_script_path }}"
      dest: "/etc/init.d/gogs"
  notify: restart gogs

- name: Copy Gogs systemd unit file into place (for systemd systems).
  template:
    src: gogs.unit.j2
    dest: /etc/systemd/system/gogs.service
    owner: root
    group: root
    mode: 0755
  when: "ansible_service_mgr == 'systemd'"

- name: Create Gogs log folder.
  file:
    path: "{{ gogs_user_home }}/gogs/log"
    state: directory
    owner: "{{ gogs_user }}"
    group: "{{ gogs_user }}"
    mode: 0755

- name: Ensure Gogs is running.
  service: name=gogs state=started enabled=yes
